// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Merchant {
  id                String        @id @default(cuid())
  shopDomain        String        @unique
  threshold         Float         @default(0)
  billingPlan       BillingPlan   @default(STANDARD)
  stripeCustomerId  String?       @unique
  isActive          Boolean       @default(true)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  
  entries           Entry[]
  transactions      Transaction[]
  
  @@map("merchants")
}

model Entry {
  id             String    @id @default(cuid())
  orderId        String    @unique
  merchantId     String
  customerId     String?
  customerEmail  String
  customerName   String?
  orderAmount    Float
  period         String    // e.g., "2024-Q1"
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  
  merchant       Merchant  @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  
  @@map("entries")
}

model Transaction {
  id               String            @id @default(cuid())
  orderId          String
  merchantId       String
  feeAmount        Float
  status           TransactionStatus @default(PENDING)
  stripeChargeId   String?
  description      String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  
  merchant         Merchant          @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  
  @@map("transactions")
}

model PrizePool {
  id            String   @id @default(cuid())
  period        String   @unique // e.g., "2024-Q1"
  currentAmount Float    @default(0)
  isActive      Boolean  @default(true)
  drawingDate   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("prize_pools")
}

enum BillingPlan {
  STANDARD    // Low monthly fee, higher transaction fees
  ENTERPRISE  // Higher monthly fee, lower transaction fees
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}
